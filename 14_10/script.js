// Создайте и заполните массив: напишите код, который создает массив и заполняет его числами от 1 до 10. Используйте цикл for для этого.
let nummers = [];
for (let i = 1; i <= 10; i++) {
    nummers.push(i)

}
console.log(nummers);
// Обход массива: создайте массив чисел. Напишите код, который использует цикл for для перебора элементов массива и выводит каждое число в консоль.

let nummers1 = [1, 2, 3, 4];
for (let i = 0; i < nummers1.length; i++) {

    console.log(nummers1[i]);
}
// Обратный обход массива: создайте массив чисел. Напишите код, который использует цикл for, чтобы перебрать массив в обратном порядке (с последнего элемента к первому).
let nummers2 = [0, 1, 2, 3, 4, 5];
function goNummer(arr) {
    for (let i = nummers2.length - 1; i > 0; i--) {
        console.log(arr[i]);

    }

}
goNummer(nummers2)

// Фильтрация массива: создайте массив чисел. Напишите код, который использует цикл for, чтобы создать новый массив, который содержит только числа из исходного массива, которые больше 5.

function nummers3(N) {
    // Создаёт пустой массив result.
    let result = [];
    // Проходит циклом от 1 до N.
    for (let i = 1; i <= N; i++) {
        // Проверяет, больше ли текущее число 5.сли число больше 5, добавляет его в массив result.
        if (i > 5) {
            result.push(i)
        }
    }
    // Выводит массив result в виде строки, где элементы разделены запятыми.
    console.log(result.join(', '));

}
nummers3(10)
//     У вас есть массив студентов с их оценками в виде объектов. Напишите программу, которая проходит по каждому студенту, вычисляет среднюю оценку и создает новый объект, содержащий имена студентов и их средние оценки.
// // Исходный массив студентов с оценками
// const students = [
//   { name: 'Анна', grades: [85, 90, 92] },
//   { name: 'Иван', grades: [88, 75, 96] },
//   { name: 'Мария', grades: [78, 82, 94] },
// ];
const students = [
    {
        name: 'Анна',
        grades: [85, 90, 92]
    },
    {
        name: 'Иван',
        grades: [88, 75, 96]
    },
    {
        name: 'Мария',
        grades: [78, 82, 94]
    },
];
// Здесь мы создаем калькулятор, который складывает все оценки и делит на их количество, чтобы найти среднюю оценку.
function averageGrade(grades) {
    let result = 0
    for (let i = 0; i < grades.length; i++) {
        result += grades[i];
    }
    return result / grades.length
}
// Эта функция берет имя студента и его оценки, использует калькулятор средней оценки и создает новый объект с именем и средней оценкой.
function createStudent(student) {
    return {
        name: student.name,
        averageGrade: averageGrade(student.grades)
    }
}
// Здесь мы создаем пустой (массив). Затем проходим по каждому студенту, создаем новый объект с именем и средней оценкой, и кладем его в нашу коробку.
const newStudents = [];
for (let i = 0; i < students.length; i++) {
    const studentsAverage = createStudent(students[i]);
    newStudents.push(studentsAverage);
}

console.log(newStudents);

// Напишите программу, которая проходит по каждому студенту и находит его максимальную оценку, создавая новый объект, содержащий имя студента и его максимальную оценку.
const students1 = [
    {
        name: 'Анна',
        grades: [85, 90, 92]
    },
    {
        name: 'Иван',
        grades: [88, 75, 96]
    },
    {
        name: 'Мария',
        grades: [78, 82, 94]
    }
]
function maxGrade(grades) {
    // Инициализируем переменную max первой оценкой в массиве
    let max = grades[0];
    // Цикл for начинается со второго элемента массива (индекс 1) и идет до конца массива.
    for (let i = 1; i < grades.length; i++) {
        // tсли текущая оценка больше, чем max, то обновляем max значением текущей оценки.
        if (grades[i] > max) {
            max = grades[i];
        }
    }
    // Возвращаем найденное максимальное значение.
    return max;
}
// Функция для создания нового объекта студента с максимальной оценкой
function createStudentWithMaxGrade(student) {
    return {
        // Сохраняем имя студента.
        name: student.name,
        // Используем функцию maxGrade, чтобы найти максимальную оценку студента.
        maxGrade: maxGrade(student.grades)
    };
}
// Создание нового массива для студентов с их максимальными оценкамиСоздаем пустой массив для новых объектов.
// Создаем пустой массив для новых объектов.
const newStudents1 = [];
// Цикл for проходит по каждому студенту в исходном массиве.
for (let i = 0; i < students1.length; i++) {
    // Для каждого студента вызываем функцию createStudentWithMaxGrade, которая создает новый объект студента с его максимальной оценкой.
    const studentWithMax = createStudentWithMaxGrade(students1[i]);
    // Добавляем новый объект студента в массив newStudents1.
    newStudents1.push(studentWithMax);
}


console.log(newStudents1);




































































